/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc_jj {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        combo_layer_3 {
            bindings = <&sl 3>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E             &kp R      &kp T             &kp Y           &kp U        &kp I      &kp O    &kp P     &kp BSPC
&caps_word  &kp A  &kp S  &kp D             &kp F      &kp G             &kp H           &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V      &kp B             &kp N           &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LEFT_CONTROL  &lt 1 ESC  &mt LGUI SPACE    &mt RGUI SPACE  &lt 2 ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB         &kp N1        &kp N2        &kp N3            &kp N4        &kp N5        &kp N6    &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_CLR    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans   &trans
&kp LEFT_SHIFT  &kp F1        &kp F2        &kp F3            &kp F4        &kp F5        &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp RIGHT_SHIFT
                                            &kp LEFT_CONTROL  &trans        &kp LGUI      &kp RGUI  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB  &kp EXCL   &kp AT  &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none    &trans     &trans  &trans            &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&none    &kp TILDE  &trans  &trans            &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &none
                            &kp LEFT_CONTROL  &trans    &kp LGUI     &kp RGUI   &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans            &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans            &trans      &trans  &trans  &trans
                        &trans  &trans  &trans    &trans          &trans            &trans
            >;
        };
    };
};
